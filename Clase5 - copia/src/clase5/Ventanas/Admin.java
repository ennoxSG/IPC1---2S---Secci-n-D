/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clase5.Ventanas;

import clase5.Clases.Estudiante;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author esteb
 */
public class Admin extends javax.swing.JFrame {

    private ArrayList<Estudiante> estudiantes; 
    private DefaultTableModel modeloTabla; 
    
    public Admin(ArrayList<Estudiante> est) {
        this.estudiantes = est; 
        
        initComponents();
        setLocationRelativeTo(null); 
        
        // Se define un arreglo de cadenas con los nombres de las columnas para la tabla, "Usuario" y "Rol"
        String[] columnas = {"Codigo", "NomBre", "Rol"};

        // Se crea un nuevo modelo de tabla utilizando las columnas definidas y sin filas iniciales (0 filas)
        modeloTabla = new DefaultTableModel(columnas, 0);

        // Se asigna el modelo de tabla creado a la tabla en la interfaz (tablaUsuarios)
        tablaUsuarios.setModel(modeloTabla);

        // Se llama al método cargarDatos() para llenar la tabla con los datos de los estudiantes
        cargarDatos(); 
        
        
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Acción"); // Columna para botones
        model.addRow(new Object[]{1, "Nombre 1", "Mostrar ID"});
        model.addRow(new Object[]{2, "Nombre 2", "Mostrar ID"});
        jTable1.setModel(model);

        // Renderizar botones en la columna de acción
        jTable1.getColumnModel().getColumn(2).setCellRenderer(new javax.swing.table.TableCellRenderer() {
            @Override
            public java.awt.Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                return new JButton(value.toString());
            }
        });

        // Añadir listener para manejar clics en la columna de botones
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int column = jTable1.getColumnModel().getColumnIndexAtX(evt.getX());
                int row = evt.getY() / jTable1.getRowHeight();

                if (row < jTable1.getRowCount() && row >= 0 && column < jTable1.getColumnCount() && column == 2) {
                    int id = (int) jTable1.getValueAt(row, 0);
                    JOptionPane.showMessageDialog(jTable1, "ID: " + id);
                }
            }
        });
        
        
    }
    
    
    public void cargarDatos(){
        // Se limpia el modelo de la tabla, eliminando todas las filas existentes
        modeloTabla.setRowCount(0);

        // Se recorre la lista de estudiantes
        for(Estudiante estudiante : estudiantes) {
            //Se declara la variable de rol con el valor de Admin
            String rol = ""; 
            
            //Se valida si el rol es 1 (usuario), y sino se le pasa el valor de Admin
            
            if(estudiante.getRol() == 1){
                rol = "Usuario";
            }else {
                rol = "Admin";
            }

            // Se crea un arreglo de objetos que representa una fila en la tabla, con el usuario y el rol del estudiante
            Object[] fila = {estudiante.getCodigo(),estudiante.getNombre(), rol};

            // Se añade la fila al modelo de la tabla
            modeloTabla.addRow(fila);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setBackground(new java.awt.Color(255, 153, 153));
        jButton1.setText("Cerrar Sesión");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Titulo 2"
            }
        ));
        jScrollPane1.setViewportView(tablaUsuarios);

        jButton2.setText("Crear Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cargar desde CSV");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(66, 66, 66))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(161, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tabla Usuarios", jPanel2);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(166, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(204, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Patrones", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        //Para cerrar la sesión, cierra la ventana actual y abre la ventana de login
        Login lg = new Login(estudiantes); 
        lg.setVisible(true);
        this.dispose(); 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        
        //Abre ventana para añadir un nuevo estudiante, pasa los parámetros de lsita de estudiantes y modelo de tabla
        Add ad = new Add(estudiantes, modeloTabla); 
        ad.setVisible(true); 
        
        //Continua en ventana Add...
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser fl = new JFileChooser(); 
        fl.setDialogTitle("Seleccionar archivo CSV");
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo CSV", "csv"); 
        fl.setFileFilter(filter);
        
        int result = fl.showOpenDialog(null); 
        
        if (result == JFileChooser.APPROVE_OPTION ){
            File archivoSeleccionado = fl.getSelectedFile(); 
            
            try {
                BufferedReader br = new BufferedReader(new FileReader(archivoSeleccionado)); 
                String linea;
                br.readLine(); 
                
                while ((linea = br.readLine()) != null){
                    String[] valores = linea.split(","); 
                    
                    if(valores.length == 3){
                        String codigo = valores[0]; 
                        String nombre = valores[1]; 
                        String pass = valores[2]; 
                        
                        int rol = Integer.parseInt(valores[3]); 
                        
                        Estudiante estudiante = new Estudiante(codigo, nombre, pass, rol); 
                        estudiantes.add(estudiante); 
                    
                    }
                
                }
                
                cargarDatos();
            } catch (IOException e){
                e.printStackTrace(); 
            }
            
        }
        
        
        
        
     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String codigo =  JOptionPane.showInputDialog(this, "Ingrese el codigo del usuario a eliminar: ", "Eliminar Usuario", JOptionPane.WARNING_MESSAGE); 
        boolean encontrado = false; 
        
        for (Estudiante est : estudiantes){
            if(est.getCodigo().equals(codigo)){
                estudiantes.remove(est); 
                JOptionPane.showMessageDialog(this, "Usuario eliminado");
                cargarDatos(); 
                return; 
            }
        }
        
        JOptionPane.showMessageDialog(this, "No se encontro el usuario", "Error", JOptionPane.ERROR_MESSAGE);
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        String codigo =  JOptionPane.showInputDialog(this, "Ingrese el codigo del usuario a actualizar: ", "Actualizar Usuario", JOptionPane.WARNING_MESSAGE); 
        
        
        for (Estudiante est : estudiantes){
            if(est.getCodigo().equals(codigo)){
                UpdateEstudiante ad = new UpdateEstudiante(est, this); 
                ad.setVisible(true); 
                
                cargarDatos(); 
                return; 
            }
        }
        
        JOptionPane.showMessageDialog(this, "No se encontro el usuario", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnActualizarActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tablaUsuarios;
    // End of variables declaration//GEN-END:variables
}
